name: mighty_plug_manager
description: Custom mighty plug/air managing app

# The following line prevents the package from being accidentally published to
# pub.dev using `pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.0.18+68

environment:
  sdk: ">=3.0.0 <=4.0.0"

dependencies:
  flutter:
    sdk: flutter
  permission_handler: ^10.2.0
  path_provider: ^2.0.10
  html: ^0.15.0
  just_audio: ^0.9.20

  tinycolor2: ^3.0.1

  wakelock_plus: ^1.2.10
  package_info_plus: ^8.1.3
  device_info_plus: ^11.2.1
  url_launcher: ^6.3.1

  drag_and_drop_lists:
    path: ./plugins/drag_and_drop_list
  
  #modified to include qr scanning from gallery (for android only)
  #and to make it null safe
  qr_utils:
    path: ./plugins/qr_utils-0.1.5

  audio_waveform:
    path: ./plugins/audio_waveform
  youtube_explode_dart: ^2.0.2
  
  #modified audio_picker to allow multiple file selection
  #note the ios version does not have the multi file fix
  #maybe don't show it in ios altogether
  audio_picker:
    path: ./plugins/audio_picker
  file_picker:
    path: ./plugins/file_picker
  #modified to work on ios but not tested
  on_audio_query_forked: ^2.9.1

  page_view_indicators: ^2.0.0
  uuid: ^3.0.1
  marquee_text: ^2.5.0+1

  flutter_blue_plus:
    path: ./plugins/flutter_blue_plus

  flutter_web_bluetooth: ^0.2.0
  
  mighty_ble:
    path: ./plugins/mighty_ble

 # flutter_reactive_ble: ^5.0.3

  flutter_midi_command:
    path: ./plugins/flutter_midi_command/flutter_midi_command-0.3.7
  
  undo: ^1.4.0
  flutter_typeahead: ^5.2.0
  
  screenshot: ^3.0.0
  share_plus: ^10.1.4
  convert: ^3.0.1
  pocketbase: ^0.16.0

  #webview_flutter: ^4.4.2
  #http: ^1.1.0

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  # cupertino_icons: ^0.1.3

dev_dependencies:
  flutter_launcher_icons: ^0.11.0
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0
  
flutter_icons:
  android: "launcher_icon"
  ios: false
  image_path: "assets/icon_big.png"
  adaptive_icon_background: "#ffffff"
  adaptive_icon_foreground: "assets/icon_adaptive.png"

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets must be at 2 spaces, the files at 4
  assets:
    - assets/audio/calibration.wav
    - assets/images/
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: MightierIcons
      fonts:
        - asset: assets/fonts/MightierIcons.ttf
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
